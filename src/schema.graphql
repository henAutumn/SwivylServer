# import agency from "./generated/prisma.graphql"

type Query {
  me: User
  agencies: [Agency!]!
  users: [User!]!
}

type Mutation {
  signup(email: String!, password: String!, firstName: String, lastName: String, agency: String, isMU: Boolean): AuthPayload!
  login(email: String!, password: String!): AuthPayload!

  #Agencies
  createAgency(masteruser: String!, name: String!, img: String!): Agency!
  updateAgency(id:ID!, masteruser:String!, name:String, img:String):Agency!
  deleteAgency(id:ID!, masteruser:String!): Agency!


  #Users
  createUser(email:String!, password:String!, firstName:String, lastName:String, title:String!, agency: String! isMU:Boolean):AuthPayload!
  updateUser(id:ID!, email:String, password:String, firstName:String, lastName:String, agency: String, title:String, isMU:Boolean):User!
  deleteUser(id:ID!):User!

  #ImgUpload
  createUpload(name: String!, type: String!, size: Int!, path: String): Upload!
}

type Subscription {
  userSubscription: UserSubscriptionPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID! 
  email: String! 
  password: String!
  firstName: String
  lastName: String
  agency: String
  title: String
  isMU: Boolean
}

type Agency {
  id: ID!
  masteruser: String!
  name: String!
  img: String!
  teammembers: [User!]!
}

type Upload {
  id: ID!
  name: String!
  type: String!
  size: Int!
  path: String!
}
